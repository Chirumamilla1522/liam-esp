openapi: 3.0.0
info:
  version: '1.0'
  title: liam-esp
  description: REST-API for liam-esp mower
paths:
  /status:
    get:
      tags:
        - System
      description: returns current status of mower with the most useful information
      operationId: getStatus
      responses:
        '200':
          description: Current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /system:
    get:
      tags:
        - System
      description: returns current system information of mower
      operationId: getSystem
      responses:
        '200':
          description: Current system information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
  /state:
    put:
      tags:
        - State
      description: 'set mowers current state, e.g. command it to start cutting, or go back to charge station.'
      operationId: setState
      responses:
        '200':
          description: successfully changed to new state
        '400':
          description: Bad request (missformed JSON)
        '422':
          description: unknown state requested
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetState'
  /loglevel:
    get:
      tags:
        - Debugging
      description: get current loglevel for debugging and faultfinding
      operationId: getLoglevel
      responses:
        '200':
          description: returns current loglevel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loglevel'
    put:
      tags:
        - Debugging
      description: 'set loglevel for debugging and faultfinding. 0=none, 1=fatal, 2=error, 3=warning, 4=notice, 5=debug, 6=verbose'
      operationId: setLoglevel
      responses:
        '200':
          description: successfully set loglevel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loglevel'
  /logmessages:
    get:
      tags:
        - Debugging
      description: get current log messages. Old ones are removed when new ones arrives.
      operationId: getLogmessages
      parameters:
        - in: query
          name: lastnr
          schema:
            type: integer
            format: uint16
          required: false
          description: id of last message received, will fetch next XX messages after that. Zero or no parameter will pick from beginning.
      responses:
        '200':
          description: returns current log messages. New lines are marked with '\n'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logmessages'
  /session:
    post:
      tags:
        - Authentication
      description: login user and create session. An session cookie will be set that are expected to be used in future request
      operationId: createSession
      responses:
        '201':
          description: successfully logged in user
        '400':
          description: if missing parameters or request is malformed
        '401':
          description: if login failed due to wrong credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSession'          
    get:
      tags:
        - Authentication
      description: get current session
      operationId: getSession
      responses:
        '200':
          description: active session available
        '401':
          description: no session available
    delete:
      tags:
        - Authentication
      description: logout session.
      operationId: deleteSession
      responses:
        '200':
          description: session removed
  /basic_auth:
    get:
      tags:
        - Authentication
      description: sign on using HTTP Basic Authentication
      operationId: getBasicAuth
      responses:
        '200':
          description: authentication succeeded
        '401':
          description: authentication failed
  /apikey:
    post:
      tags:
        - Authentication
      description: trigger the generation of a new API key to replace the old one for authentication
      operationId: generateApiKey
      responses:
        '201':
          description: successfully generated a new API key
  /factoryreset:
    put:
      tags:
        - System
      description: clear all settings and restart mower as brand new. (ALL SETTING WILL BE LOST!)
      operationId: factoryreset
      responses:
        '200':
          description: successfully factory reset mower
  /reboot:
    put:
      tags:
        - System
      description: 'reboot mower, application will restart but all settings will be left unaffected'
      operationId: reboot
      responses:
        '200':
          description: successfully begun rebooting mower
  /manual/forward:
    put:
      tags:
        - Manual
      description: 'manually drive mower forward, set speed and turnrate'
      operationId: manualForward
      responses:
        '200':
          description: successfully set mower to forward motion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardBackwardMotion'
  /manual/backward:
    put:
      tags:
        - Manual
      description: 'manually drive mower backward, set speed and turnrate'
      operationId: manualBackward
      responses:
        '200':
          description: successfully set mower to backward motion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardBackwardMotion'
  /manual/stop:
    put:
      tags:
        - Manual
      description: stop mower when driving manually
      operationId: manualStop
      responses:
        '200':
          description: successfully stopped mower
  /manual/cutter_on:
    put:
      tags:
        - Manual
      description: start cutter on mower
      operationId: manualStartCutter
      responses:
        '200':
          description: successfully started cutter
  /manual/cutter_off:
    put:
      tags:
        - Manual
      description: stop cutter on mower
      operationId: manualStopCutter
      responses:
        '200':
          description: successfully stopped cutter
  /history/battery:
    get:
      tags:
        - History
      description: returns battery level over the past time.
      operationId: getBatteryHistory
      responses:
        '200':
          description: battery level history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatteryHistory'
  /history/position:
    get:
      tags:
        - History
      description: returns mower GPS-position over the past time.
      operationId: getPositionHistory
      responses:
        '200':
          description: GPS-position history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionHistory'
  /schedules:
    post:
      tags:
        - Scheduling
      description: add mowing schedule to list of schedules. 
      operationId: createScheduleEntry
      responses:
        '201':
          description: successfully added schedule
        '400':
          description: if missing parameters or request is malformed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleEntry'
    get:
      tags:
        - Scheduling
      description: returns mower schedules.
      operationId: getSchedules
      responses:
        '200':
          description: List of schedule entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEntry'
  /schedules/{position}:                
      delete:
        tags:
          - Scheduling
        description: remove a schedule entry
        operationId: deleteScheduleEntry
        parameters:
          - in: path
            name: position
            schema:
              type: integer
            required: true
            description: position in list (starting with 0)
        responses:
          '200':
            description: schedule entry removed
    
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: query
      name: apikey
  schemas:
    Status:
      type: object
      properties:
        state:
          type: string
          enum:
            - DOCKED
            - LAUNCHING
            - MOWING
            - DOCKING
            - CHARGING
            - STUCK
            - FLIPPED
            - MANUAL
            - STOP
            - TEST
        batteryVoltage:
          type: number
          format: float
        batteryLevel:
          type: number
          format: float
        batteryChargeCurrent:
          type: number
          format: float
        isCharging:
          type: boolean
        lastFullyChargeTime:
          type: integer
          format: unit32
        lastChargeDuration:
          type: integer
          format: unit32
        wifiSignal:
          type: integer
          format: uint8
        cutterLoad:
          type: integer
          format: uint8
        cutterRotating:
          type: boolean
        uptime:
          type: integer
          format: uint32
        leftWheelSpd:
          type: integer
          format: int16
        rightWheelSpd:
          type: integer
          format: int16
        pitch:
          type: integer
          format: int16
        roll:
          type: integer
          format: int16
        heading:
          type: integer
          format: uint16
        obstacles:
          type: array
          description: distance (in centimeters) to possible obstacles, one reading per available sensor
          items:
            type: integer
            format: uint16
    System:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        mowerId:
          type: string
        totalHeap:
          type: integer
          format: uint32
        freeHeap:
          type: integer
          format: uint32
        minFreeHeap:
          type: integer
          format: uint32          
        getMaxAllocHeap:
          type: integer
          format: uint32          
        apiKey:
          type: string
        localTime:
          type: string
        settings:
          type: object
          properties:
            batteryFullVoltage:
              type: number
              format: float
            batteryEmptyVoltage:
              type: number
              format: float
    SetState:
      type: object
      properties:
        state:
          type: string
          enum:
            - DOCKED
            - LAUNCHING
            - MOWING
            - DOCKING
            - CHARGING
            - STUCK
            - FLIPPED
            - MANUAL
            - STOP
            - TEST
    Loglevel:
      type: object
      properties:
        level:
          type: integer
          format: unit8
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
    Logmessages:
      type: object
      properties:
        messages:
          type: array
          description: log messages (max 20 per request)
          items:
            type: string
        lastnr:
          type: integer
          format: uint16
        total:
          type: integer
          format: uint16
    ForwardBackwardMotion:
      type: object
      properties:
        speed:
          type: integer
          format: int8
          description: 0-100%
        turnrate:
          type: integer
          format: int8
          description: '-1=>-100 left, 1=>100 right. 0 = don''t turn.'
        smooth:
          type: boolean
          description: smoothly take us to target speed
    BatteryHistory:
      type: object
      properties:
        samples:
          type: object
          properties:
            time:
              type: array
              description: time in milliseconds since the last reboot
              items:
                type: integer
                format: uint32
            value:
              type: array
              description: in volt
              items:
                type: number
                format: float
    PositionHistory:
      type: object
      properties:
        samples:
          type: array
          items:
            type: object
            properties:
              t:
                type: integer
                format: uint32
                description: time in milliseconds since the last reboot
              lt:
                type: number
                format: double
                description: GPS-latitude
              lg:
                type: number
                format: double
                description: GPS-longitude
    CreateSession:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ScheduleEntry:
      type: object
      properties:
        activeWeekdays:
          type: array
          description: array of weekdays (starting with monday, tuesday...). True means mowing should be conducted this day of the week.
          items:
            type: boolean
          minItems: 7
          maxItems: 7
        startTime:
          type: string
          description: time when mowing should begin. In the format "HH:MM", and we use a 24 hours notation.
        stopTime:
          type: string
          description: time when mowing should end. In the format "HH:MM", and we use a 24 hours notation.
security:
  - basicAuth: []
  - apiKeyAuth: []
servers:
  - description: Liam mower
    url: /api/v1
  - description: Running local mock
    url: 'http://localhost:8080/api/v1'
