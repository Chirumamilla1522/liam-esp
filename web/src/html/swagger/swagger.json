{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0",
    "title" : "liam-esp",
    "description" : "REST-API for liam-esp mower"
  },
  "paths" : {
    "/status" : {
      "get" : {
        "tags" : [ "System" ],
        "description" : "returns current status of mower with the most useful information",
        "operationId" : "getStatus",
        "responses" : {
          "200" : {
            "description" : "Current status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/system" : {
      "get" : {
        "tags" : [ "System" ],
        "description" : "returns current system information of mower",
        "operationId" : "getSystem",
        "responses" : {
          "200" : {
            "description" : "Current system information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/System"
                }
              }
            }
          }
        }
      }
    },
    "/state" : {
      "put" : {
        "tags" : [ "State" ],
        "description" : "set mowers current state, e.g. command it to start cutting, or go back to charge station.",
        "operationId" : "setState",
        "responses" : {
          "200" : {
            "description" : "successfully changed to new state"
          },
          "400" : {
            "description" : "Bad request (missformed JSON)"
          },
          "422" : {
            "description" : "unknown state requested"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetState"
              }
            }
          }
        }
      }
    },
    "/loglevel" : {
      "get" : {
        "tags" : [ "Debugging" ],
        "description" : "get current loglevel for debugging and faultfinding",
        "operationId" : "getLoglevel",
        "responses" : {
          "200" : {
            "description" : "returns current loglevel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loglevel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Debugging" ],
        "description" : "set loglevel for debugging and faultfinding. 0=none, 1=fatal, 2=error, 3=warning, 4=notice, 5=debug, 6=verbose",
        "operationId" : "setLoglevel",
        "responses" : {
          "200" : {
            "description" : "successfully set loglevel"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loglevel"
              }
            }
          }
        }
      }
    },
    "/factoryreset" : {
      "put" : {
        "tags" : [ "System" ],
        "description" : "clear all settings and restart mower as brand new. (ALL SETTING WILL BE LOST!)",
        "operationId" : "factoryreset",
        "responses" : {
          "200" : {
            "description" : "successfully factory reset mower"
          }
        }
      }
    },
    "/reboot" : {
      "put" : {
        "tags" : [ "System" ],
        "description" : "reboot mower, application will restart but all settings will be left unaffected",
        "operationId" : "reboot",
        "responses" : {
          "200" : {
            "description" : "successfully begun rebooting mower"
          }
        }
      }
    },
    "/manual/forward" : {
      "put" : {
        "tags" : [ "Manual" ],
        "description" : "manually drive mower forward, set speed and turnrate",
        "operationId" : "manualForward",
        "responses" : {
          "200" : {
            "description" : "successfully set mower to forward motion"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardBackwardMotion"
              }
            }
          }
        }
      }
    },
    "/manual/backward" : {
      "put" : {
        "tags" : [ "Manual" ],
        "description" : "manually drive mower backward, set speed and turnrate",
        "operationId" : "manualBackward",
        "responses" : {
          "200" : {
            "description" : "successfully set mower to backward motion"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardBackwardMotion"
              }
            }
          }
        }
      }
    },
    "/manual/stop" : {
      "put" : {
        "tags" : [ "Manual" ],
        "description" : "stop mower when driving manually",
        "operationId" : "manualStop",
        "responses" : {
          "200" : {
            "description" : "successfully stopped mower"
          }
        }
      }
    },
    "/manual/cutter_on" : {
      "put" : {
        "tags" : [ "Manual" ],
        "description" : "start cutter on mower",
        "operationId" : "manualStartCutter",
        "responses" : {
          "200" : {
            "description" : "successfully started cutter"
          }
        }
      }
    },
    "/manual/cutter_off" : {
      "put" : {
        "tags" : [ "Manual" ],
        "description" : "stop cutter on mower",
        "operationId" : "manualStopCutter",
        "responses" : {
          "200" : {
            "description" : "successfully stopped cutter"
          }
        }
      }
    },
    "/history/battery" : {
      "get" : {
        "tags" : [ "History" ],
        "description" : "returns battery level over the past time.",
        "operationId" : "getBatteryHistory",
        "responses" : {
          "200" : {
            "description" : "battery level history",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatteryHistory"
                }
              }
            }
          }
        }
      }
    },
    "/history/position" : {
      "get" : {
        "tags" : [ "History" ],
        "description" : "returns mower GPS-position over the past time.",
        "operationId" : "getPositionHistory",
        "responses" : {
          "200" : {
            "description" : "GPS-position history",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PositionHistory"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Status" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "enum" : [ "DOCKED", "LAUNCHING", "MOWING", "DOCKING", "CHARGING", "STUCK", "FLIPPED", "MANUAL", "STOP", "TEST" ]
          },
          "batteryVoltage" : {
            "type" : "number",
            "format" : "float"
          },
          "batteryLevel" : {
            "type" : "number",
            "format" : "float"
          },
          "isCharging" : {
            "type" : "boolean"
          },
          "lastFullyChargeTime" : {
            "type" : "integer",
            "format" : "unit32"
          },
          "lastChargeDuration" : {
            "type" : "integer",
            "format" : "unit32"
          },
          "wifiSignal" : {
            "type" : "integer",
            "format" : "uint8"
          },
          "cutterLoad" : {
            "type" : "integer",
            "format" : "uint8"
          },
          "cutterRotating" : {
            "type" : "boolean"
          },
          "uptime" : {
            "type" : "integer",
            "format" : "uint32"
          },
          "leftWheelSpd" : {
            "type" : "integer",
            "format" : "int16"
          },
          "rightWheelSpd" : {
            "type" : "integer",
            "format" : "int16"
          },
          "targetHeading" : {
            "type" : "integer",
            "format" : "uint16"
          },
          "pitch" : {
            "type" : "integer",
            "format" : "int16"
          },
          "roll" : {
            "type" : "integer",
            "format" : "int16"
          },
          "heading" : {
            "type" : "integer",
            "format" : "uint16"
          }
        }
      },
      "System" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "cpuFreq" : {
            "type" : "integer",
            "format" : "uint8"
          },
          "flashChipSize" : {
            "type" : "integer",
            "format" : "uint32"
          },
          "freeHeap" : {
            "type" : "integer",
            "format" : "uint32"
          },
          "batteryFullVoltage" : {
            "type" : "number",
            "format" : "float"
          },
          "batteryEmptyVoltage" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "SetState" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "enum" : [ "DOCKED", "LAUNCHING", "MOWING", "DOCKING", "CHARGING", "STUCK", "FLIPPED", "MANUAL", "STOP", "TEST" ]
          }
        }
      },
      "Loglevel" : {
        "type" : "object",
        "properties" : {
          "level" : {
            "type" : "integer",
            "format" : "unit8",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6 ]
          }
        }
      },
      "ForwardBackwardMotion" : {
        "type" : "object",
        "properties" : {
          "speed" : {
            "type" : "integer",
            "format" : "int8",
            "description" : "0-100%"
          },
          "turnrate" : {
            "type" : "integer",
            "format" : "int8",
            "description" : "-1=>-100 left, 1=>100 right. 0 = don't turn."
          },
          "smooth" : {
            "type" : "boolean",
            "description" : "smoothly take us to target speed"
          }
        }
      },
      "BatteryHistory" : {
        "type" : "object",
        "properties" : {
          "samples" : {
            "type" : "object",
            "properties" : {
              "time" : {
                "type" : "array",
                "description" : "time in milliseconds since the last reboot",
                "items" : {
                  "type" : "integer",
                  "format" : "uint32"
                }
              },
              "value" : {
                "type" : "array",
                "description" : "in volt",
                "items" : {
                  "type" : "number",
                  "format" : "float"
                }
              }
            }
          }
        }
      },
      "PositionHistory" : {
        "type" : "object",
        "properties" : {
          "samples" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "t" : {
                  "type" : "integer",
                  "format" : "uint32",
                  "description" : "time in milliseconds since the last reboot"
                },
                "lt" : {
                  "type" : "number",
                  "format" : "double",
                  "description" : "GPS-latitude"
                },
                "lg" : {
                  "type" : "number",
                  "format" : "double",
                  "description" : "GPS-longitude"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/liquidbytes.se/liam-esp/1.0"
  }, {
    "description" : "Running local moc",
    "url" : "http://localhost:8080/api/v1"
  } ]
}